%{ 	 
#include <stdio.h>
#include <string.h>
int lines = 0;
%} 

%option noyywrap
%option caseless

DIGIT		[0-9]
WORD		\"[a-zA-Z0-9]*\"
NUMBER		[1-9][0-9]*|0$
CHARACTER 	\'[a-zA-Z0-9]\'
CONST		{WORD}|{NUMBER}|{CHARACTER}
ID			[a-zA-Z][a-zA-Z0-9_]*

%%

number		{printf("Reserved word: %s\n", yytext);}
vector		{printf("Reserved word: %s\n", yytext);}
if			{printf("Reserved word: %s\n", yytext);}
else		{printf("Reserved word: %s\n", yytext);}
loop		{printf("Reserved word: %s\n", yytext);}
print		{printf("Reserved word: %s\n", yytext);}
while		{printf("Reserved word: %s\n", yytext);}
char		{printf("Reserved word: %s\n", yytext);}
string		{printf("Reserved word: %s\n", yytext);}
start_prg	{printf("Reserved word: %s\n", yytext);}
end_prg		{printf("Reserved word: %s\n", yytext);}
start		{printf("Reserved word: %s\n", yytext);}
stop		{printf("Reserved word: %s\n", yytext);}
read		{printf("Reserved word: %s\n", yytext);}
and			{printf("Reserved word: %s\n", yytext);}
or			{printf("Reserved word: %s\n", yytext);}

{ID}	{printf( "Identifier: %s\n", yytext );}

{CONST}	{printf( "Constant: %s\n", yytext );}

";"		{printf( "Separator: %s\n", yytext );}
"["		{printf( "Separator: %s\n", yytext );}
"]"		{printf( "Separator: %s\n", yytext );}
":"		{printf( "Separator: %s\n", yytext );}
","		{printf( "Separator: %s\n", yytext );}
"+"		{printf( "Operator: %s\n", yytext );}
"-"		{printf( "Operator: %s\n", yytext );}
"/"		{printf( "Operator: %s\n", yytext );}
"*"		{printf( "Operator: %s\n", yytext );}
":="	{printf( "Operator: %s\n", yytext );}
"<"		{printf( "Operator: %s\n", yytext );}
"<="	{printf( "Operator: %s\n", yytext );}
">"		{printf( "Operator: %s\n", yytext );}
">="	{printf( "Operator: %s\n", yytext );}
"!="	{printf( "Operator: %s\n", yytext );}
"=="	{printf( "Operator: %s\n", yytext );}
"!"		{printf( "Operator: %s\n", yytext );}

[ \t]+  {}
[\n]+ 	{lines++;}

[0-9~@#$%^][a-zA-Z0-9]	{printf("Illegal identifier at line %d \n", lines);}
\"[a-zA-Z0-9] {printf("Expected end of string on line %d\n", lines); }

%%